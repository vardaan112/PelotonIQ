<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="3.029" tests="49" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/vardy/Documents/GithubCode/PelotonIQ/target/test-classes:/Users/vardy/Documents/GithubCode/PelotonIQ/target/classes:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.0/spring-boot-starter-web-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.0/spring-boot-starter-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot/3.1.0/spring-boot-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.0/spring-boot-autoconfigure-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.0/spring-boot-starter-logging-3.1.0.jar:/Users/vardy/.m2/repository/ch/qos/logback/logback-classic/1.4.7/logback-classic-1.4.7.jar:/Users/vardy/.m2/repository/ch/qos/logback/logback-core/1.4.7/logback-core-1.4.7.jar:/Users/vardy/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/Users/vardy/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/Users/vardy/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/Users/vardy/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/vardy/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.0/spring-boot-starter-json-3.1.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.0/jackson-databind-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.0/jackson-annotations-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.0/jackson-core-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.0/jackson-datatype-jdk8-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.0/jackson-datatype-jsr310-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.0/jackson-module-parameter-names-2.15.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.0/spring-boot-starter-tomcat-3.1.0.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.8/tomcat-embed-core-10.1.8.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.8/tomcat-embed-websocket-10.1.8.jar:/Users/vardy/.m2/repository/org/springframework/spring-web/6.0.9/spring-web-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-beans/6.0.9/spring-beans-6.0.9.jar:/Users/vardy/.m2/repository/io/micrometer/micrometer-observation/1.11.0/micrometer-observation-1.11.0.jar:/Users/vardy/.m2/repository/io/micrometer/micrometer-commons/1.11.0/micrometer-commons-1.11.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-webmvc/6.0.9/spring-webmvc-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-context/6.0.9/spring-context-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-expression/6.0.9/spring-expression-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.0/spring-boot-starter-data-jpa-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.0/spring-boot-starter-aop-3.1.0.jar:/Users/vardy/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.0/spring-boot-starter-jdbc-3.1.0.jar:/Users/vardy/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/vardy/.m2/repository/org/springframework/spring-jdbc/6.0.9/spring-jdbc-6.0.9.jar:/Users/vardy/.m2/repository/org/hibernate/orm/hibernate-core/6.2.2.Final/hibernate-core-6.2.2.Final.jar:/Users/vardy/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vardy/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vardy/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vardy/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vardy/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vardy/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vardy/.m2/repository/net/bytebuddy/byte-buddy/1.14.4/byte-buddy-1.14.4.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vardy/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vardy/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vardy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vardy/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/vardy/.m2/repository/org/springframework/data/spring-data-jpa/3.1.0/spring-data-jpa-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/data/spring-data-commons/3.1.0/spring-data-commons-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-orm/6.0.9/spring-orm-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-tx/6.0.9/spring-tx-6.0.9.jar:/Users/vardy/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vardy/.m2/repository/org/springframework/spring-aspects/6.0.9/spring-aspects-6.0.9.jar:/Users/vardy/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/Users/vardy/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.0/spring-boot-starter-security-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-aop/6.0.9/spring-aop-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-config/6.1.0/spring-security-config-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-web/6.1.0/spring-security-web-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.0/spring-boot-starter-validation-3.1.0.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.8/tomcat-embed-el-10.1.8.jar:/Users/vardy/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.0.Final/hibernate-validator-8.0.0.Final.jar:/Users/vardy/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.0/spring-boot-starter-test-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-test/3.1.0/spring-boot-test-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.0/spring-boot-test-autoconfigure-3.1.0.jar:/Users/vardy/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/vardy/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vardy/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/vardy/.m2/repository/net/minidev/json-smart/2.4.10/json-smart-2.4.10.jar:/Users/vardy/.m2/repository/net/minidev/accessors-smart/2.4.9/accessors-smart-2.4.9.jar:/Users/vardy/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/vardy/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/vardy/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/vardy/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/vardy/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/vardy/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/Users/vardy/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/Users/vardy/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.4/byte-buddy-agent-1.14.4.jar:/Users/vardy/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/vardy/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/Users/vardy/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/vardy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/vardy/.m2/repository/org/springframework/spring-core/6.0.9/spring-core-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-jcl/6.0.9/spring-jcl-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-test/6.0.9/spring-test-6.0.9.jar:/Users/vardy/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/vardy/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-test/6.1.0/spring-security-test-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-core/6.1.0/spring-security-core-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-crypto/6.1.0/spring-security-crypto-6.1.0.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="America/Los_Angeles"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/24.0.2/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/vardy/Documents/GithubCode/PelotonIQ/target/surefire/surefirebooter-20250815113711756_3.jar /Users/vardy/Documents/GithubCode/PelotonIQ/target/surefire 2025-08-15T11-37-11_714-jvmRun1 surefire-20250815113711756_1tmp surefire_0-20250815113711756_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="test" value="*RepositoryTest"/>
    <property name="surefire.test.class.path" value="/Users/vardy/Documents/GithubCode/PelotonIQ/target/test-classes:/Users/vardy/Documents/GithubCode/PelotonIQ/target/classes:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.0/spring-boot-starter-web-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.0/spring-boot-starter-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot/3.1.0/spring-boot-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.0/spring-boot-autoconfigure-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.0/spring-boot-starter-logging-3.1.0.jar:/Users/vardy/.m2/repository/ch/qos/logback/logback-classic/1.4.7/logback-classic-1.4.7.jar:/Users/vardy/.m2/repository/ch/qos/logback/logback-core/1.4.7/logback-core-1.4.7.jar:/Users/vardy/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/Users/vardy/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/Users/vardy/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/Users/vardy/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/vardy/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.0/spring-boot-starter-json-3.1.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.0/jackson-databind-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.0/jackson-annotations-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.0/jackson-core-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.0/jackson-datatype-jdk8-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.0/jackson-datatype-jsr310-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.0/jackson-module-parameter-names-2.15.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.0/spring-boot-starter-tomcat-3.1.0.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.8/tomcat-embed-core-10.1.8.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.8/tomcat-embed-websocket-10.1.8.jar:/Users/vardy/.m2/repository/org/springframework/spring-web/6.0.9/spring-web-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-beans/6.0.9/spring-beans-6.0.9.jar:/Users/vardy/.m2/repository/io/micrometer/micrometer-observation/1.11.0/micrometer-observation-1.11.0.jar:/Users/vardy/.m2/repository/io/micrometer/micrometer-commons/1.11.0/micrometer-commons-1.11.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-webmvc/6.0.9/spring-webmvc-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-context/6.0.9/spring-context-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-expression/6.0.9/spring-expression-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.0/spring-boot-starter-data-jpa-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.0/spring-boot-starter-aop-3.1.0.jar:/Users/vardy/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.0/spring-boot-starter-jdbc-3.1.0.jar:/Users/vardy/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/vardy/.m2/repository/org/springframework/spring-jdbc/6.0.9/spring-jdbc-6.0.9.jar:/Users/vardy/.m2/repository/org/hibernate/orm/hibernate-core/6.2.2.Final/hibernate-core-6.2.2.Final.jar:/Users/vardy/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vardy/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vardy/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vardy/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vardy/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vardy/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vardy/.m2/repository/net/bytebuddy/byte-buddy/1.14.4/byte-buddy-1.14.4.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vardy/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vardy/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vardy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vardy/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/vardy/.m2/repository/org/springframework/data/spring-data-jpa/3.1.0/spring-data-jpa-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/data/spring-data-commons/3.1.0/spring-data-commons-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-orm/6.0.9/spring-orm-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-tx/6.0.9/spring-tx-6.0.9.jar:/Users/vardy/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vardy/.m2/repository/org/springframework/spring-aspects/6.0.9/spring-aspects-6.0.9.jar:/Users/vardy/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/Users/vardy/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.0/spring-boot-starter-security-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-aop/6.0.9/spring-aop-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-config/6.1.0/spring-security-config-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-web/6.1.0/spring-security-web-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.0/spring-boot-starter-validation-3.1.0.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.8/tomcat-embed-el-10.1.8.jar:/Users/vardy/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.0.Final/hibernate-validator-8.0.0.Final.jar:/Users/vardy/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.0/spring-boot-starter-test-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-test/3.1.0/spring-boot-test-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.0/spring-boot-test-autoconfigure-3.1.0.jar:/Users/vardy/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/vardy/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vardy/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/vardy/.m2/repository/net/minidev/json-smart/2.4.10/json-smart-2.4.10.jar:/Users/vardy/.m2/repository/net/minidev/accessors-smart/2.4.9/accessors-smart-2.4.9.jar:/Users/vardy/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/vardy/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/vardy/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/vardy/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/vardy/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/vardy/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/Users/vardy/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/Users/vardy/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.4/byte-buddy-agent-1.14.4.jar:/Users/vardy/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/vardy/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/Users/vardy/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/vardy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/vardy/.m2/repository/org/springframework/spring-core/6.0.9/spring-core-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-jcl/6.0.9/spring-jcl-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-test/6.0.9/spring-test-6.0.9.jar:/Users/vardy/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/vardy/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-test/6.1.0/spring-security-test-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-core/6.1.0/spring-security-core-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-crypto/6.1.0/spring-security-crypto-6.1.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/vardy"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-07-15"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/24.0.2/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/vardy/Documents/GithubCode/PelotonIQ"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/vardy/Documents/GithubCode/PelotonIQ/target/surefire/surefirebooter-20250815113711756_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="24.0.2"/>
    <property name="user.name" value="vardy"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.6"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/vardy/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/8_/zltdknkj4kbcxw21hm_456480000gn/T/"/>
    <property name="java.version" value="24.0.2"/>
    <property name="user.dir" value="/Users/vardy/Documents/GithubCode/PelotonIQ"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="28291"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/vardy/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="24.0.2"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="68.0"/>
  </properties>
  <testcase name="shouldFindUpcomingRaces" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.383">
    <system-out><![CDATA[11:37:12.360 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.pelotoniq.cycling.repository.RaceRepositoryTest]: RaceRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
11:37:12.431 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.pelotoniq.cycling.CyclingApiApplication for test class com.pelotoniq.cycling.repository.RaceRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
&amp#27;[32m :: Spring Boot :: &amp#27;[39m              &amp#27;[2m (v3.1.0)&amp#27;[0;39m

&amp#27;[2m2025-08-15T11:37:12.606-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mc.p.c.repository.RaceRepositoryTest     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Starting RaceRepositoryTest using Java 24.0.2 with PID 28291 (started by vardy in /Users/vardy/Documents/GithubCode/PelotonIQ)
&amp#27;[2m2025-08-15T11:37:12.607-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mc.p.c.repository.RaceRepositoryTest     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Running with Spring Boot v3.1.0, Spring v6.0.9
&amp#27;[2m2025-08-15T11:37:12.607-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mc.p.c.repository.RaceRepositoryTest     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m The following 1 profile is active: "test"
&amp#27;[2m2025-08-15T11:37:12.746-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36m.s.d.r.c.RepositoryConfigurationDelegate&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
&amp#27;[2m2025-08-15T11:37:12.769-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36m.s.d.r.c.RepositoryConfigurationDelegate&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Finished Spring Data repository scanning in 20 ms. Found 2 JPA repository interfaces.
&amp#27;[2m2025-08-15T11:37:12.824-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mbeddedDataSourceBeanFactoryPostProcessor&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Replacing 'dataSource' DataSource bean with embedded version
&amp#27;[2m2025-08-15T11:37:12.899-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.j.d.e.EmbeddedDatabaseFactory       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Starting embedded database: url='jdbc:h2:mem:bbe272e9-57b4-4260-9caf-28dd5b46317c;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
&amp#27;[2m2025-08-15T11:37:13.033-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.hibernate.jpa.internal.util.LogHelper &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
&amp#27;[2m2025-08-15T11:37:13.061-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.Version                   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000412: Hibernate ORM core version 6.2.2.Final
&amp#27;[2m2025-08-15T11:37:13.062-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.cfg.Environment           &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000406: Using bytecode reflection optimizer
&amp#27;[2m2025-08-15T11:37:13.121-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.h.b.i.BytecodeProviderInitiator       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000021: Bytecode provider name : bytebuddy
&amp#27;[2m2025-08-15T11:37:13.184-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.o.j.p.SpringPersistenceUnitInfo     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
&amp#27;[2m2025-08-15T11:37:13.204-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.orm.dialect               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.1.214
&amp#27;[2m2025-08-15T11:37:13.315-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.h.b.i.BytecodeProviderInitiator       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000021: Bytecode provider name : bytebuddy
&amp#27;[2m2025-08-15T11:37:13.668-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.h.e.t.j.p.i.JtaPlatformInitiator      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
&amp#27;[2m2025-08-15T11:37:13.675-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    drop table if exists race_participants cascade 
Hibernate: 
    drop table if exists race_participants cascade 
&amp#27;[2m2025-08-15T11:37:13.677-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    drop table if exists races cascade 
Hibernate: 
    drop table if exists races cascade 
&amp#27;[2m2025-08-15T11:37:13.677-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    drop table if exists riders cascade 
Hibernate: 
    drop table if exists riders cascade 
&amp#27;[2m2025-08-15T11:37:13.679-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    create table race_participants (
        race_id bigint not null,
        rider_id bigint not null,
        primary key (race_id, rider_id)
    )
Hibernate: 
    create table race_participants (
        race_id bigint not null,
        rider_id bigint not null,
        primary key (race_id, rider_id)
    )
&amp#27;[2m2025-08-15T11:37:13.682-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    create table races (
        distance_km numeric(5,2),
        elevation_gain_m integer check ((elevation_gain_m<=10000) and (elevation_gain_m>=0)),
        entry_fee numeric(7,2),
        max_participants integer check ((max_participants>=1) and (max_participants<=1000)),
        prize_money numeric(10,2),
        race_date date not null,
        registration_deadline date,
        registration_open boolean not null,
        start_time time(6) not null,
        temperature_celsius integer check ((temperature_celsius>=-50) and (temperature_celsius<=60)),
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        version bigint,
        country varchar(50) not null,
        location varchar(100) not null,
        name varchar(100) not null,
        weather_forecast varchar(500),
        description varchar(1000) not null,
        category varchar(255) not null check (category in ('WORLD_TOUR','PRO_SERIES','CONTINENTAL','NATIONAL','REGIONAL','AMATEUR','RECREATIONAL','YOUTH','MASTERS','WOMEN_ONLY','MIXED')),
        race_type varchar(255) not null check (race_type in ('ROAD_RACE','TIME_TRIAL','CRITERIUM','MOUNTAIN_STAGE','SPRINT_STAGE','HILL_CLIMB','GRAN_FONDO','CYCLOCROSS','TRACK_RACE','ONE_DAY_CLASSIC')),
        status varchar(255) not null check (status in ('PLANNED','REGISTRATION_OPEN','REGISTRATION_CLOSED','READY','IN_PROGRESS','FINISHED','CANCELLED','POSTPONED','ABANDONED')),
        primary key (id)
    )
Hibernate: 
    create table races (
        distance_km numeric(5,2),
        elevation_gain_m integer check ((elevation_gain_m<=10000) and (elevation_gain_m>=0)),
        entry_fee numeric(7,2),
        max_participants integer check ((max_participants>=1) and (max_participants<=1000)),
        prize_money numeric(10,2),
        race_date date not null,
        registration_deadline date,
        registration_open boolean not null,
        start_time time(6) not null,
        temperature_celsius integer check ((temperature_celsius>=-50) and (temperature_celsius<=60)),
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        version bigint,
        country varchar(50) not null,
        location varchar(100) not null,
        name varchar(100) not null,
        weather_forecast varchar(500),
        description varchar(1000) not null,
        category varchar(255) not null check (category in ('WORLD_TOUR','PRO_SERIES','CONTINENTAL','NATIONAL','REGIONAL','AMATEUR','RECREATIONAL','YOUTH','MASTERS','WOMEN_ONLY','MIXED')),
        race_type varchar(255) not null check (race_type in ('ROAD_RACE','TIME_TRIAL','CRITERIUM','MOUNTAIN_STAGE','SPRINT_STAGE','HILL_CLIMB','GRAN_FONDO','CYCLOCROSS','TRACK_RACE','ONE_DAY_CLASSIC')),
        status varchar(255) not null check (status in ('PLANNED','REGISTRATION_OPEN','REGISTRATION_CLOSED','READY','IN_PROGRESS','FINISHED','CANCELLED','POSTPONED','ABANDONED')),
        primary key (id)
    )
&amp#27;[2m2025-08-15T11:37:13.688-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    create table riders (
        active boolean not null,
        date_of_birth date not null,
        ftp_watts float(53),
        height_cm integer check ((height_cm<=250) and (height_cm>=40)),
        weight_kg integer check ((weight_kg>=30) and (weight_kg<=200)),
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        version bigint,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        nationality varchar(50) not null,
        email varchar(100) not null unique,
        team varchar(100) not null,
        specialization varchar(255) not null check (specialization in ('SPRINTER','CLIMBER','TIME_TRIALIST','ALL_ROUNDER','DOMESTIQUE','CLASSICS_SPECIALIST','BREAKAWAY_SPECIALIST','PUNCHEUR')),
        primary key (id)
    )
Hibernate: 
    create table riders (
        active boolean not null,
        date_of_birth date not null,
        ftp_watts float(53),
        height_cm integer check ((height_cm<=250) and (height_cm>=40)),
        weight_kg integer check ((weight_kg>=30) and (weight_kg<=200)),
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        version bigint,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        nationality varchar(50) not null,
        email varchar(100) not null unique,
        team varchar(100) not null,
        specialization varchar(255) not null check (specialization in ('SPRINTER','CLIMBER','TIME_TRIALIST','ALL_ROUNDER','DOMESTIQUE','CLASSICS_SPECIALIST','BREAKAWAY_SPECIALIST','PUNCHEUR')),
        primary key (id)
    )
&amp#27;[2m2025-08-15T11:37:13.689-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    create index idx_race_date 
       on races (race_date)
Hibernate: 
    create index idx_race_date 
       on races (race_date)
&amp#27;[2m2025-08-15T11:37:13.690-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    create index idx_race_type 
       on races (race_type)
Hibernate: 
    create index idx_race_type 
       on races (race_type)
&amp#27;[2m2025-08-15T11:37:13.690-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    create index idx_race_status 
       on races (status)
Hibernate: 
    create index idx_race_status 
       on races (status)
&amp#27;[2m2025-08-15T11:37:13.691-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    create index idx_race_location 
       on races (location)
Hibernate: 
    create index idx_race_location 
       on races (location)
&amp#27;[2m2025-08-15T11:37:13.691-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    create index idx_rider_team 
       on riders (team)
Hibernate: 
    create index idx_rider_team 
       on riders (team)
&amp#27;[2m2025-08-15T11:37:13.692-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    create index idx_rider_nationality 
       on riders (nationality)
Hibernate: 
    create index idx_rider_nationality 
       on riders (nationality)
&amp#27;[2m2025-08-15T11:37:13.692-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    alter table if exists race_participants 
       add constraint FK8rntitvjnh5vfacaj7afrhcul 
       foreign key (race_id) 
       references races
Hibernate: 
    alter table if exists race_participants 
       add constraint FK8rntitvjnh5vfacaj7afrhcul 
       foreign key (race_id) 
       references races
&amp#27;[2m2025-08-15T11:37:13.696-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    alter table if exists race_participants 
       add constraint FKss4ccbi66x1sj3537gdagfe05 
       foreign key (rider_id) 
       references riders
Hibernate: 
    alter table if exists race_participants 
       add constraint FKss4ccbi66x1sj3537gdagfe05 
       foreign key (rider_id) 
       references riders
&amp#27;[2m2025-08-15T11:37:13.698-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.h.t.s.i.e.GenerationTargetToDatabase  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
&amp#27;[2m2025-08-15T11:37:13.699-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mj.LocalContainerEntityManagerFactoryBean&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
&amp#27;[2m2025-08-15T11:37:13.867-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.d.j.r.query.QueryEnhancerFactory    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Hibernate is in classpath; If applicable, HQL parser will be used.
&amp#27;[2m2025-08-15T11:37:14.554-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mc.p.c.repository.RaceRepositoryTest     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Started RaceRepositoryTest in 2.091 seconds (process running for 2.752)
&amp#27;[2m2025-08-15T11:37:14.840-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.859-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.861-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.862-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.897-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.race_date>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.race_date>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByDateRange" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.012">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:14.944-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.946-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.947-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.948-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.952-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.race_date between ? and ?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.race_date between ? and ?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesWithWeatherForecast" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.011">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:14.957-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.959-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.960-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.961-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.964-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.weather_forecast is not null
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.weather_forecast is not null
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByStatus" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.015">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:14.968-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.971-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.972-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.973-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.978-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.status=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.status=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindAverageDistanceByRaceType" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.013">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:14.984-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.986-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.987-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.987-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.991-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        avg(r1_0.distance_km) 
    from
        races r1_0 
    where
        r1_0.race_type=?
Hibernate: 
    select
        avg(r1_0.distance_km) 
    from
        races r1_0 
    where
        r1_0.race_type=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesWithMinimumParticipantCount" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.011">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:14.998-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:14.999-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.000-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.001-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.005-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants p1_0 
            where
                r1_0.id=p1_0.race_id
        )>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants p1_0 
            where
                r1_0.id=p1_0.race_id
        )>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindHighestPrizeMoneyRaces" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.009">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.009-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.011-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.012-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.013-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.015-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.prize_money=(
            select
                max(r2_0.prize_money) 
            from
                races r2_0
        )
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.prize_money=(
            select
                max(r2_0.prize_money) 
            from
                races r2_0
        )
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByMinimumPrizeMoney" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.009">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.019-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.021-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.022-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.023-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.025-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.prize_money>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.prize_money>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByMinimumCapacity" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.009">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.029-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.030-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.031-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.032-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.034-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.max_participants>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.max_participants>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindMostPopularRaces" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.009">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.038-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.039-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.040-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.041-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.044-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    order by
        (select
            count(1) 
        from
            race_participants p1_0 
        where
            r1_0.id=p1_0.race_id) desc offset ? rows fetch first ? rows only
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    order by
        (select
            count(1) 
        from
            race_participants p1_0 
        where
            r1_0.id=p1_0.race_id) desc offset ? rows fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesWithClosedRegistration" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.008">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.048-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.049-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.050-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.051-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.053-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        not(r1_0.registration_open)
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        not(r1_0.registration_open)
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesWithAvailableSpots" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.008">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.057-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.058-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.058-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.059-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.061-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants p1_0 
            where
                r1_0.id=p1_0.race_id
        )<r1_0.max_participants
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants p1_0 
            where
                r1_0.id=p1_0.race_id
        )<r1_0.max_participants
]]></system-out>
  </testcase>
  <testcase name="shouldReturnEmptyListForHighMinimumParticipantCount" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.007">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.065-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.066-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.067-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.068-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.069-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants p1_0 
            where
                r1_0.id=p1_0.race_id
        )>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants p1_0 
            where
                r1_0.id=p1_0.race_id
        )>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindActiveUpcomingRaces" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.008">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.073-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.074-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.074-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.075-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.078-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.status in('PLANNED','REGISTRATION_OPEN','REGISTRATION_CLOSED') 
        and r1_0.race_date>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.status in('PLANNED','REGISTRATION_OPEN','REGISTRATION_CLOSED') 
        and r1_0.race_date>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindCancelledOrPostponedRaces" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.081-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.082-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.083-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.083-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.085-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.status in('CANCELLED','POSTPONED') 
        and r1_0.race_date>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.status in('CANCELLED','POSTPONED') 
        and r1_0.race_date>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindLongestRacesByType" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.008">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.088-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.089-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.090-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.091-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.093-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.distance_km=(
            select
                max(r2_0.distance_km) 
            from
                races r2_0 
            where
                r2_0.race_type=r1_0.race_type
        )
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.distance_km=(
            select
                max(r2_0.distance_km) 
            from
                races r2_0 
            where
                r2_0.race_type=r1_0.race_type
        )
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesWithOpenRegistration" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.097-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.098-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.099-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.099-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.101-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.registration_open
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.registration_open
]]></system-out>
  </testcase>
  <testcase name="shouldHandleNullParametersInCustomQueries" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.104-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.105-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.106-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.106-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.107-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.prize_money>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.prize_money>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRaceTypeCountsByYear" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.008">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.110-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.111-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.112-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.112-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.115-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.race_type,
        count(r1_0.id) 
    from
        races r1_0 
    where
        extract(year from r1_0.race_date)=? 
    group by
        r1_0.race_type 
    order by
        count(r1_0.id) desc
Hibernate: 
    select
        r1_0.race_type,
        count(r1_0.id) 
    from
        races r1_0 
    where
        extract(year from r1_0.race_date)=? 
    group by
        r1_0.race_type 
    order by
        count(r1_0.id) desc
]]></system-out>
  </testcase>
  <testcase name="shouldCheckIfRaceExistsByName" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.007">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.119-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.120-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.120-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.121-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.123-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id 
    from
        races r1_0 
    where
        r1_0.name=? fetch first ? rows only
Hibernate: 
    select
        r1_0.id 
    from
        races r1_0 
    where
        r1_0.name=? fetch first ? rows only
&amp#27;[2m2025-08-15T11:37:15.124-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id 
    from
        races r1_0 
    where
        r1_0.name=? fetch first ? rows only
Hibernate: 
    select
        r1_0.id 
    from
        races r1_0 
    where
        r1_0.name=? fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="shouldFindTotalPrizeMoneyByCountryAndYear" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.127-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.128-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.128-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.129-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.131-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        sum(r1_0.prize_money) 
    from
        races r1_0 
    where
        r1_0.country=? 
        and extract(year from r1_0.race_date)=?
Hibernate: 
    select
        sum(r1_0.prize_money) 
    from
        races r1_0 
    where
        r1_0.country=? 
        and extract(year from r1_0.race_date)=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesWithoutWeatherForecast" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.134-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.135-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.135-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.136-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.137-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.weather_forecast is null
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.weather_forecast is null
]]></system-out>
  </testcase>
  <testcase name="shouldHandleEmptyResultsGracefully" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.140-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.141-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.142-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.143-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.144-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.location=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.location=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByLocationWithPagination" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.01">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.147-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.147-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.148-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.149-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.151-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.location=? offset ? rows fetch first ? rows only
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.location=? offset ? rows fetch first ? rows only
&amp#27;[2m2025-08-15T11:37:15.153-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        count(r1_0.id) 
    from
        races r1_0 
    where
        r1_0.location=?
Hibernate: 
    select
        count(r1_0.id) 
    from
        races r1_0 
    where
        r1_0.location=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByLocation" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.157-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.158-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.159-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.159-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.161-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.location=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.location=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindCategoryCountsByYear" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.007">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.163-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.164-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.165-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.165-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.167-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.category,
        count(r1_0.id) 
    from
        races r1_0 
    where
        extract(year from r1_0.race_date)=? 
    group by
        r1_0.category 
    order by
        count(r1_0.id) desc
Hibernate: 
    select
        r1_0.category,
        count(r1_0.id) 
    from
        races r1_0 
    where
        extract(year from r1_0.race_date)=? 
    group by
        r1_0.category 
    order by
        count(r1_0.id) desc
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByStartTimeRange" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.007">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.170-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.171-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.172-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.172-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.174-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.start_time between ? and ?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.start_time between ? and ?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesOpenForRegistration" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.177-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.178-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.178-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.179-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.180-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.registration_deadline>=? 
        and r1_0.registration_open=true
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.registration_deadline>=? 
        and r1_0.registration_open=true
]]></system-out>
  </testcase>
  <testcase name="shouldFindRaceByName" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.183-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.184-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.184-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.185-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.186-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.name=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.name=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesOrderedByPrizeMoneyDesc" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.189-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.190-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.190-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.191-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.192-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    order by
        r1_0.prize_money desc offset ? rows fetch first ? rows only
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    order by
        r1_0.prize_money desc offset ? rows fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByKeywordSearch" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.007">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.196-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.197-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.197-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.198-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.200-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        lower(r1_0.name) like lower(('%'||?||'%')) escape '' 
        or lower(r1_0.description) like lower(('%'||?||'%')) escape ''
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        lower(r1_0.name) like lower(('%'||?||'%')) escape '' 
        or lower(r1_0.description) like lower(('%'||?||'%')) escape ''
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByKeywordSearchCaseInsensitive" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.007">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.204-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.205-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.205-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.207-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.209-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        lower(r1_0.name) like lower(('%'||?||'%')) escape '' 
        or lower(r1_0.description) like lower(('%'||?||'%')) escape ''
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        lower(r1_0.name) like lower(('%'||?||'%')) escape '' 
        or lower(r1_0.description) like lower(('%'||?||'%')) escape ''
]]></system-out>
  </testcase>
  <testcase name="shouldFindAverageElevationByCountry" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.009">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.212-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.213-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.213-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.214-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.216-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        avg(cast(r1_0.elevation_gain_m as float(53))) 
    from
        races r1_0 
    where
        r1_0.country=?
Hibernate: 
    select
        avg(cast(r1_0.elevation_gain_m as float(53))) 
    from
        races r1_0 
    where
        r1_0.country=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindAverageEntryFeeByCategory" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.221-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.222-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.223-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.223-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.225-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        avg(r1_0.entry_fee) 
    from
        races r1_0 
    where
        r1_0.category=?
Hibernate: 
    select
        avg(r1_0.entry_fee) 
    from
        races r1_0 
    where
        r1_0.category=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesOrderedByDistanceDesc" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.227-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.228-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.228-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.229-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.230-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    order by
        r1_0.distance_km desc offset ? rows fetch first ? rows only
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    order by
        r1_0.distance_km desc offset ? rows fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="shouldCountRacesByLocationAndStatus" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.232-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.233-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.234-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.234-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.235-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        count(r1_0.id) 
    from
        races r1_0 
    where
        r1_0.location=? 
        and r1_0.status=?
Hibernate: 
    select
        count(r1_0.id) 
    from
        races r1_0 
    where
        r1_0.location=? 
        and r1_0.status=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindCountryRaceCountsByYear" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.238-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.238-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.239-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.239-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.241-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.country,
        count(r1_0.id) 
    from
        races r1_0 
    where
        extract(year from r1_0.race_date)=? 
    group by
        r1_0.country 
    order by
        count(r1_0.id) desc
Hibernate: 
    select
        r1_0.country,
        count(r1_0.id) 
    from
        races r1_0 
    where
        extract(year from r1_0.race_date)=? 
    group by
        r1_0.country 
    order by
        count(r1_0.id) desc
]]></system-out>
  </testcase>
  <testcase name="shouldFindMostChallengingRaces" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.243-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.244-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.244-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.244-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.246-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.elevation_gain_m=(
            select
                max(r2_0.elevation_gain_m) 
            from
                races r2_0
        )
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.elevation_gain_m=(
            select
                max(r2_0.elevation_gain_m) 
            from
                races r2_0
        )
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByEntryFeeRange" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.248-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.249-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.249-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.250-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.251-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.entry_fee between ? and ?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.entry_fee between ? and ?
]]></system-out>
  </testcase>
  <testcase name="shouldFindFullRaces" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.254-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.254-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.255-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.255-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.256-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants p1_0 
            where
                r1_0.id=p1_0.race_id
        )>=r1_0.max_participants
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants p1_0 
            where
                r1_0.id=p1_0.race_id
        )>=r1_0.max_participants
]]></system-out>
  </testcase>
  <testcase name="shouldFindLocationRaceCountsByYear" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.259-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.259-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.260-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.260-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.261-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.location,
        count(r1_0.id) 
    from
        races r1_0 
    where
        extract(year from r1_0.race_date)=? 
    group by
        r1_0.location 
    order by
        count(r1_0.id) desc
Hibernate: 
    select
        r1_0.location,
        count(r1_0.id) 
    from
        races r1_0 
    where
        extract(year from r1_0.race_date)=? 
    group by
        r1_0.location 
    order by
        count(r1_0.id) desc
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByTemperatureRange" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.264-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.264-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.265-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.265-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.267-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.temperature_celsius between ? and ?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.temperature_celsius between ? and ?
]]></system-out>
  </testcase>
  <testcase name="shouldCountRacesByCountryAndYear" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.269-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.270-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.270-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.271-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.272-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        count(r1_0.id) 
    from
        races r1_0 
    where
        r1_0.country=? 
        and extract(year from r1_0.race_date)=?
Hibernate: 
    select
        count(r1_0.id) 
    from
        races r1_0 
    where
        r1_0.country=? 
        and extract(year from r1_0.race_date)=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByRaceType" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.274-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.275-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.276-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.276-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.277-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.race_type=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.race_type=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByElevationRange" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.279-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.280-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.281-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.281-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.282-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.elevation_gain_m between ? and ?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.elevation_gain_m between ? and ?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByDistanceRange" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.284-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.285-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.286-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.286-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.287-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.distance_km between ? and ?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.distance_km between ? and ?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByCategory" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.290-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.291-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.292-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.292-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.293-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.category=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.category=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRacesByCountry" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.296-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.296-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.297-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.297-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.298-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.country=?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.country=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindPastRaces" classname="com.pelotoniq.cycling.repository.RaceRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.301-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.302-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.302-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.302-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        races
        (category,country,created_at,description,distance_km,elevation_gain_m,entry_fee,location,max_participants,name,prize_money,race_date,race_type,registration_deadline,registration_open,start_time,status,temperature_celsius,updated_at,version,weather_forecast,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.304-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.race_date<?
Hibernate: 
    select
        r1_0.id,
        r1_0.category,
        r1_0.country,
        r1_0.created_at,
        r1_0.description,
        r1_0.distance_km,
        r1_0.elevation_gain_m,
        r1_0.entry_fee,
        r1_0.location,
        r1_0.max_participants,
        r1_0.name,
        r1_0.prize_money,
        r1_0.race_date,
        r1_0.race_type,
        r1_0.registration_deadline,
        r1_0.registration_open,
        r1_0.start_time,
        r1_0.status,
        r1_0.temperature_celsius,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weather_forecast 
    from
        races r1_0 
    where
        r1_0.race_date<?
]]></system-out>
  </testcase>
</testsuite>