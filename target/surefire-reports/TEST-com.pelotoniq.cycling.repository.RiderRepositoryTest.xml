<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.175" tests="30" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/vardy/Documents/GithubCode/PelotonIQ/target/test-classes:/Users/vardy/Documents/GithubCode/PelotonIQ/target/classes:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.0/spring-boot-starter-web-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.0/spring-boot-starter-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot/3.1.0/spring-boot-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.0/spring-boot-autoconfigure-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.0/spring-boot-starter-logging-3.1.0.jar:/Users/vardy/.m2/repository/ch/qos/logback/logback-classic/1.4.7/logback-classic-1.4.7.jar:/Users/vardy/.m2/repository/ch/qos/logback/logback-core/1.4.7/logback-core-1.4.7.jar:/Users/vardy/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/Users/vardy/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/Users/vardy/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/Users/vardy/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/vardy/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.0/spring-boot-starter-json-3.1.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.0/jackson-databind-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.0/jackson-annotations-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.0/jackson-core-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.0/jackson-datatype-jdk8-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.0/jackson-datatype-jsr310-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.0/jackson-module-parameter-names-2.15.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.0/spring-boot-starter-tomcat-3.1.0.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.8/tomcat-embed-core-10.1.8.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.8/tomcat-embed-websocket-10.1.8.jar:/Users/vardy/.m2/repository/org/springframework/spring-web/6.0.9/spring-web-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-beans/6.0.9/spring-beans-6.0.9.jar:/Users/vardy/.m2/repository/io/micrometer/micrometer-observation/1.11.0/micrometer-observation-1.11.0.jar:/Users/vardy/.m2/repository/io/micrometer/micrometer-commons/1.11.0/micrometer-commons-1.11.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-webmvc/6.0.9/spring-webmvc-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-context/6.0.9/spring-context-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-expression/6.0.9/spring-expression-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.0/spring-boot-starter-data-jpa-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.0/spring-boot-starter-aop-3.1.0.jar:/Users/vardy/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.0/spring-boot-starter-jdbc-3.1.0.jar:/Users/vardy/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/vardy/.m2/repository/org/springframework/spring-jdbc/6.0.9/spring-jdbc-6.0.9.jar:/Users/vardy/.m2/repository/org/hibernate/orm/hibernate-core/6.2.2.Final/hibernate-core-6.2.2.Final.jar:/Users/vardy/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vardy/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vardy/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vardy/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vardy/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vardy/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vardy/.m2/repository/net/bytebuddy/byte-buddy/1.14.4/byte-buddy-1.14.4.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vardy/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vardy/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vardy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vardy/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/vardy/.m2/repository/org/springframework/data/spring-data-jpa/3.1.0/spring-data-jpa-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/data/spring-data-commons/3.1.0/spring-data-commons-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-orm/6.0.9/spring-orm-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-tx/6.0.9/spring-tx-6.0.9.jar:/Users/vardy/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vardy/.m2/repository/org/springframework/spring-aspects/6.0.9/spring-aspects-6.0.9.jar:/Users/vardy/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/Users/vardy/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.0/spring-boot-starter-security-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-aop/6.0.9/spring-aop-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-config/6.1.0/spring-security-config-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-web/6.1.0/spring-security-web-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.0/spring-boot-starter-validation-3.1.0.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.8/tomcat-embed-el-10.1.8.jar:/Users/vardy/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.0.Final/hibernate-validator-8.0.0.Final.jar:/Users/vardy/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.0/spring-boot-starter-test-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-test/3.1.0/spring-boot-test-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.0/spring-boot-test-autoconfigure-3.1.0.jar:/Users/vardy/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/vardy/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vardy/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/vardy/.m2/repository/net/minidev/json-smart/2.4.10/json-smart-2.4.10.jar:/Users/vardy/.m2/repository/net/minidev/accessors-smart/2.4.9/accessors-smart-2.4.9.jar:/Users/vardy/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/vardy/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/vardy/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/vardy/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/vardy/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/vardy/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/Users/vardy/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/Users/vardy/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.4/byte-buddy-agent-1.14.4.jar:/Users/vardy/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/vardy/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/Users/vardy/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/vardy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/vardy/.m2/repository/org/springframework/spring-core/6.0.9/spring-core-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-jcl/6.0.9/spring-jcl-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-test/6.0.9/spring-test-6.0.9.jar:/Users/vardy/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/vardy/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-test/6.1.0/spring-security-test-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-core/6.1.0/spring-security-core-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-crypto/6.1.0/spring-security-crypto-6.1.0.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="America/Los_Angeles"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/24.0.2/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/vardy/Documents/GithubCode/PelotonIQ/target/surefire/surefirebooter-20250815113711756_3.jar /Users/vardy/Documents/GithubCode/PelotonIQ/target/surefire 2025-08-15T11-37-11_714-jvmRun1 surefire-20250815113711756_1tmp surefire_0-20250815113711756_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="test" value="*RepositoryTest"/>
    <property name="surefire.test.class.path" value="/Users/vardy/Documents/GithubCode/PelotonIQ/target/test-classes:/Users/vardy/Documents/GithubCode/PelotonIQ/target/classes:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.0/spring-boot-starter-web-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.0/spring-boot-starter-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot/3.1.0/spring-boot-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.0/spring-boot-autoconfigure-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.0/spring-boot-starter-logging-3.1.0.jar:/Users/vardy/.m2/repository/ch/qos/logback/logback-classic/1.4.7/logback-classic-1.4.7.jar:/Users/vardy/.m2/repository/ch/qos/logback/logback-core/1.4.7/logback-core-1.4.7.jar:/Users/vardy/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/Users/vardy/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/Users/vardy/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/Users/vardy/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/vardy/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.0/spring-boot-starter-json-3.1.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.0/jackson-databind-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.0/jackson-annotations-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.0/jackson-core-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.0/jackson-datatype-jdk8-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.0/jackson-datatype-jsr310-2.15.0.jar:/Users/vardy/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.0/jackson-module-parameter-names-2.15.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.0/spring-boot-starter-tomcat-3.1.0.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.8/tomcat-embed-core-10.1.8.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.8/tomcat-embed-websocket-10.1.8.jar:/Users/vardy/.m2/repository/org/springframework/spring-web/6.0.9/spring-web-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-beans/6.0.9/spring-beans-6.0.9.jar:/Users/vardy/.m2/repository/io/micrometer/micrometer-observation/1.11.0/micrometer-observation-1.11.0.jar:/Users/vardy/.m2/repository/io/micrometer/micrometer-commons/1.11.0/micrometer-commons-1.11.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-webmvc/6.0.9/spring-webmvc-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-context/6.0.9/spring-context-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-expression/6.0.9/spring-expression-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.0/spring-boot-starter-data-jpa-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.0/spring-boot-starter-aop-3.1.0.jar:/Users/vardy/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.0/spring-boot-starter-jdbc-3.1.0.jar:/Users/vardy/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/vardy/.m2/repository/org/springframework/spring-jdbc/6.0.9/spring-jdbc-6.0.9.jar:/Users/vardy/.m2/repository/org/hibernate/orm/hibernate-core/6.2.2.Final/hibernate-core-6.2.2.Final.jar:/Users/vardy/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vardy/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vardy/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vardy/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vardy/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vardy/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vardy/.m2/repository/net/bytebuddy/byte-buddy/1.14.4/byte-buddy-1.14.4.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vardy/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vardy/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vardy/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vardy/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vardy/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/vardy/.m2/repository/org/springframework/data/spring-data-jpa/3.1.0/spring-data-jpa-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/data/spring-data-commons/3.1.0/spring-data-commons-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-orm/6.0.9/spring-orm-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-tx/6.0.9/spring-tx-6.0.9.jar:/Users/vardy/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vardy/.m2/repository/org/springframework/spring-aspects/6.0.9/spring-aspects-6.0.9.jar:/Users/vardy/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/Users/vardy/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.0/spring-boot-starter-security-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/spring-aop/6.0.9/spring-aop-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-config/6.1.0/spring-security-config-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-web/6.1.0/spring-security-web-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.0/spring-boot-starter-validation-3.1.0.jar:/Users/vardy/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.8/tomcat-embed-el-10.1.8.jar:/Users/vardy/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.0.Final/hibernate-validator-8.0.0.Final.jar:/Users/vardy/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.0/spring-boot-starter-test-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-test/3.1.0/spring-boot-test-3.1.0.jar:/Users/vardy/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.0/spring-boot-test-autoconfigure-3.1.0.jar:/Users/vardy/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/vardy/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vardy/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/vardy/.m2/repository/net/minidev/json-smart/2.4.10/json-smart-2.4.10.jar:/Users/vardy/.m2/repository/net/minidev/accessors-smart/2.4.9/accessors-smart-2.4.9.jar:/Users/vardy/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/vardy/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/vardy/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/vardy/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/vardy/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/vardy/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/vardy/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/Users/vardy/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/Users/vardy/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.4/byte-buddy-agent-1.14.4.jar:/Users/vardy/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/vardy/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/Users/vardy/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/vardy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/vardy/.m2/repository/org/springframework/spring-core/6.0.9/spring-core-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-jcl/6.0.9/spring-jcl-6.0.9.jar:/Users/vardy/.m2/repository/org/springframework/spring-test/6.0.9/spring-test-6.0.9.jar:/Users/vardy/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/vardy/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-test/6.1.0/spring-security-test-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-core/6.1.0/spring-security-core-6.1.0.jar:/Users/vardy/.m2/repository/org/springframework/security/spring-security-crypto/6.1.0/spring-security-crypto-6.1.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/vardy"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-07-15"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/24.0.2/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/vardy/Documents/GithubCode/PelotonIQ"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/vardy/Documents/GithubCode/PelotonIQ/target/surefire/surefirebooter-20250815113711756_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="24.0.2"/>
    <property name="user.name" value="vardy"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.6"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/vardy/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/8_/zltdknkj4kbcxw21hm_456480000gn/T/"/>
    <property name="java.version" value="24.0.2"/>
    <property name="user.dir" value="/Users/vardy/Documents/GithubCode/PelotonIQ"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="28291"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/vardy/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="24.0.2"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="68.0"/>
  </properties>
  <testcase name="shouldFindRidersByNameSearchCaseInsensitive" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.02">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.308-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mt.c.s.AnnotationConfigContextLoaderUtils&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Could not detect default configuration classes for test class [com.pelotoniq.cycling.repository.RiderRepositoryTest]: RiderRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
&amp#27;[2m2025-08-15T11:37:15.310-07:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36m.b.t.c.SpringBootTestContextBootstrapper&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Found @SpringBootConfiguration com.pelotoniq.cycling.CyclingApiApplication for test class com.pelotoniq.cycling.repository.RiderRepositoryTest
&amp#27;[2m2025-08-15T11:37:15.322-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.326-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.327-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.328-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.330-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        lower(r1_0.first_name) like lower(('%'||?||'%')) escape '' 
        or lower(r1_0.last_name) like lower(('%'||?||'%')) escape ''
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        lower(r1_0.first_name) like lower(('%'||?||'%')) escape '' 
        or lower(r1_0.last_name) like lower(('%'||?||'%')) escape ''
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersWithMinimumRaceCount" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.334-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.335-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.335-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.336-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.337-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants r2_0 
            where
                r1_0.id=r2_0.rider_id
        )>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants r2_0 
            where
                r1_0.id=r2_0.rider_id
        )>=?
]]></system-out>
  </testcase>
  <testcase name="shouldReturnEmptyListForHighMinimumRaceCount" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.340-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.341-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.342-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.342-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.343-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants r2_0 
            where
                r1_0.id=r2_0.rider_id
        )>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        (
            select
                count(1) 
            from
                race_participants r2_0 
            where
                r1_0.id=r2_0.rider_id
        )>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindOnlyActiveRiders" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.346-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.347-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.348-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.348-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.350-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.active
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.active
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersByNationality" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.353-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.353-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.354-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.354-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.356-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.nationality=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.nationality=?
]]></system-out>
  </testcase>
  <testcase name="shouldHandleNullParametersInCustomQueries" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.358-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.359-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.359-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.360-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.361-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.ftp_watts>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.ftp_watts>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersByNameSearch" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.364-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.364-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.365-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.365-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.367-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        lower(r1_0.first_name) like lower(('%'||?||'%')) escape '' 
        or lower(r1_0.last_name) like lower(('%'||?||'%')) escape ''
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        lower(r1_0.first_name) like lower(('%'||?||'%')) escape '' 
        or lower(r1_0.last_name) like lower(('%'||?||'%')) escape ''
]]></system-out>
  </testcase>
  <testcase name="shouldCountActiveRidersByTeam" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.370-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.370-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.371-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.371-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.373-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.team=? 
        and r1_0.active=true
Hibernate: 
    select
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.team=? 
        and r1_0.active=true
]]></system-out>
  </testcase>
  <testcase name="shouldHandleEmptyResultsGracefully" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.375-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.376-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.376-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.377-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.378-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.team=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.team=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersByMinimumFtp" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.380-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.380-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.381-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.381-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.382-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.ftp_watts>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.ftp_watts>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindSpecializationRiderCounts" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.385-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.385-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.386-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.386-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.387-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.specialization,
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.active=true 
    group by
        r1_0.specialization 
    order by
        count(r1_0.id) desc
Hibernate: 
    select
        r1_0.specialization,
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.active=true 
    group by
        r1_0.specialization 
    order by
        count(r1_0.id) desc
]]></system-out>
  </testcase>
  <testcase name="shouldFindTeamRiderCounts" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.390-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.391-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.391-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.391-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.393-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.team,
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.active=true 
    group by
        r1_0.team 
    order by
        count(r1_0.id) desc
Hibernate: 
    select
        r1_0.team,
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.active=true 
    group by
        r1_0.team 
    order by
        count(r1_0.id) desc
]]></system-out>
  </testcase>
  <testcase name="shouldFindOnlyInactiveRiders" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.396-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.397-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.397-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.397-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.398-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        not(r1_0.active)
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        not(r1_0.active)
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersBySpecialization" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.401-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.402-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.402-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.403-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.404-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.specialization=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.specialization=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersByTeamWithPagination" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.406-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.407-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.407-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.408-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.409-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.team=? offset ? rows fetch first ? rows only
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.team=? offset ? rows fetch first ? rows only
&amp#27;[2m2025-08-15T11:37:15.410-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.team=?
Hibernate: 
    select
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.team=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindAverageAgeByTeam" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.412-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.412-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.413-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.413-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.415-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        avg(cast((extract(year from current_date)-extract(year from r1_0.date_of_birth)) as float(53))) 
    from
        riders r1_0 
    where
        r1_0.team=?
Hibernate: 
    select
        avg(cast((extract(year from current_date)-extract(year from r1_0.date_of_birth)) as float(53))) 
    from
        riders r1_0 
    where
        r1_0.team=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindTopRidersByPowerToWeightRatio" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.006">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.419-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.419-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.420-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.420-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.422-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.active=true 
        and r1_0.ftp_watts is not null 
        and r1_0.weight_kg is not null 
    order by
        (r1_0.ftp_watts/r1_0.weight_kg) desc offset ? rows fetch first ? rows only
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.active=true 
        and r1_0.ftp_watts is not null 
        and r1_0.weight_kg is not null 
    order by
        (r1_0.ftp_watts/r1_0.weight_kg) desc offset ? rows fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersByTeam" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.425-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.425-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.426-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.426-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.427-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.team=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.team=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersByWeightRange" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.429-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.430-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.430-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.430-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.432-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.weight_kg between ? and ?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.weight_kg between ? and ?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersByAgeRange" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.433-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.434-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.434-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.435-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.436-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        (
            extract(year from current_date)-extract(year from r1_0.date_of_birth)
        ) between ? and ?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        (
            extract(year from current_date)-extract(year from r1_0.date_of_birth)
        ) between ? and ?
]]></system-out>
  </testcase>
  <testcase name="shouldReturnEmptyWhenRiderNotFoundByEmail" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.438-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.439-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.439-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.440-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.440-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.email=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.email=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersByDateOfBirthRange" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.443-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.444-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.444-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.444-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.446-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.date_of_birth between ? and ?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.date_of_birth between ? and ?
]]></system-out>
  </testcase>
  <testcase name="shouldCheckIfRiderExistsByEmail" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.448-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.448-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.449-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.449-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.450-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id 
    from
        riders r1_0 
    where
        r1_0.email=? fetch first ? rows only
Hibernate: 
    select
        r1_0.id 
    from
        riders r1_0 
    where
        r1_0.email=? fetch first ? rows only
&amp#27;[2m2025-08-15T11:37:15.450-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id 
    from
        riders r1_0 
    where
        r1_0.email=? fetch first ? rows only
Hibernate: 
    select
        r1_0.id 
    from
        riders r1_0 
    where
        r1_0.email=? fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="shouldCountActiveRidersByNationality" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.452-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.453-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.453-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.454-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.455-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.nationality=? 
        and r1_0.active=true
Hibernate: 
    select
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.nationality=? 
        and r1_0.active=true
]]></system-out>
  </testcase>
  <testcase name="shouldFindNationalityRiderCounts" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.457-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.457-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.458-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.458-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.459-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.nationality,
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.active=true 
    group by
        r1_0.nationality 
    order by
        count(r1_0.id) desc
Hibernate: 
    select
        r1_0.nationality,
        count(r1_0.id) 
    from
        riders r1_0 
    where
        r1_0.active=true 
    group by
        r1_0.nationality 
    order by
        count(r1_0.id) desc
]]></system-out>
  </testcase>
  <testcase name="shouldFindRiderByEmail" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.461-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.462-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.462-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.462-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.463-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.email=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.email=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindTopRidersByFtp" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.465-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.466-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.466-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.466-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.467-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.active=true 
    order by
        r1_0.ftp_watts desc offset ? rows fetch first ? rows only
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.active=true 
    order by
        r1_0.ftp_watts desc offset ? rows fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersByPowerToWeightRatio" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.005">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.470-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.471-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.471-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.471-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.473-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.ftp_watts is not null 
        and r1_0.weight_kg is not null 
        and (
            r1_0.ftp_watts/r1_0.weight_kg
        )>=?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.ftp_watts is not null 
        and r1_0.weight_kg is not null 
        and (
            r1_0.ftp_watts/r1_0.weight_kg
        )>=?
]]></system-out>
  </testcase>
  <testcase name="shouldFindRidersByHeightRange" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.004">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.475-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.476-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.476-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.476-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.477-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.height_cm between ? and ?
Hibernate: 
    select
        r1_0.id,
        r1_0.active,
        r1_0.created_at,
        r1_0.date_of_birth,
        r1_0.email,
        r1_0.first_name,
        r1_0.ftp_watts,
        r1_0.height_cm,
        r1_0.last_name,
        r1_0.nationality,
        r1_0.specialization,
        r1_0.team,
        r1_0.updated_at,
        r1_0.version,
        r1_0.weight_kg 
    from
        riders r1_0 
    where
        r1_0.height_cm between ? and ?
]]></system-out>
  </testcase>
  <testcase name="shouldFindAverageFtpByTeam" classname="com.pelotoniq.cycling.repository.RiderRepositoryTest" time="0.003">
    <system-out><![CDATA[&amp#27;[2m2025-08-15T11:37:15.479-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.480-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.480-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.480-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        riders
        (active,created_at,date_of_birth,email,first_name,ftp_watts,height_cm,last_name,nationality,specialization,team,updated_at,version,weight_kg,id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
&amp#27;[2m2025-08-15T11:37:15.481-07:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m28291&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.SQL                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m 
    select
        avg(r1_0.ftp_watts) 
    from
        riders r1_0 
    where
        r1_0.ftp_watts is not null 
        and r1_0.team=?
Hibernate: 
    select
        avg(r1_0.ftp_watts) 
    from
        riders r1_0 
    where
        r1_0.ftp_watts is not null 
        and r1_0.team=?
]]></system-out>
  </testcase>
</testsuite>